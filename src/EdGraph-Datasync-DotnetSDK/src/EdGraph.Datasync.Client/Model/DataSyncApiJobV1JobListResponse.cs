/*
 * DataSync Api
 *
 * DataSync Api - v1.0
 *
 * The version of the OpenAPI document: v1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdGraph.Datasync.Client.Client.OpenAPIDateConverter;

namespace EdGraph.Datasync.Client.Model
{
    /// <summary>
    /// DataSyncApiJobV1JobListResponse
    /// </summary>
    [DataContract(Name = "DataSyncApi.Job.V1.JobListResponse")]
    public partial class DataSyncApiJobV1JobListResponse : IEquatable<DataSyncApiJobV1JobListResponse>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets JobStatus
        /// </summary>
        [DataMember(Name = "jobStatus", EmitDefaultValue = false)]
        public DataSyncApiJobV1JobStatus? JobStatus { get; set; }

        /// <summary>
        /// Gets or Sets JobExecutionStatus
        /// </summary>
        [DataMember(Name = "jobExecutionStatus", EmitDefaultValue = false)]
        public DataSyncApiJobV1JobExecutionStatus? JobExecutionStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DataSyncApiJobV1JobListResponse" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="jobId">jobId.</param>
        /// <param name="name">name.</param>
        /// <param name="jobTypeId">jobTypeId.</param>
        /// <param name="jobTypeName">jobTypeName.</param>
        /// <param name="sourceConnectionId">sourceConnectionId.</param>
        /// <param name="destinationConnectionId">destinationConnectionId.</param>
        /// <param name="profileId">profileId.</param>
        /// <param name="applicationId">applicationId.</param>
        /// <param name="schedule">schedule.</param>
        /// <param name="jobStatus">jobStatus.</param>
        /// <param name="jobExecutionId">jobExecutionId.</param>
        /// <param name="jobExecutionStatus">jobExecutionStatus.</param>
        /// <param name="jobExecutionStartDateTime">jobExecutionStartDateTime.</param>
        /// <param name="jobExecutionEndDateTime">jobExecutionEndDateTime.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="createdDateTime">createdDateTime.</param>
        /// <param name="lastModifiedBy">lastModifiedBy.</param>
        /// <param name="lastModifiedDateTime">lastModifiedDateTime.</param>
        public DataSyncApiJobV1JobListResponse(string tenantId = default(string), string jobId = default(string), string name = default(string), string jobTypeId = default(string), string jobTypeName = default(string), string sourceConnectionId = default(string), string destinationConnectionId = default(string), string profileId = default(string), string applicationId = default(string), DataSyncApiJobV1Schedule schedule = default(DataSyncApiJobV1Schedule), DataSyncApiJobV1JobStatus? jobStatus = default(DataSyncApiJobV1JobStatus?), string jobExecutionId = default(string), DataSyncApiJobV1JobExecutionStatus? jobExecutionStatus = default(DataSyncApiJobV1JobExecutionStatus?), string jobExecutionStartDateTime = default(string), string jobExecutionEndDateTime = default(string), string createdBy = default(string), string createdDateTime = default(string), string lastModifiedBy = default(string), string lastModifiedDateTime = default(string))
        {
            this.TenantId = tenantId;
            this.JobId = jobId;
            this.Name = name;
            this.JobTypeId = jobTypeId;
            this.JobTypeName = jobTypeName;
            this.SourceConnectionId = sourceConnectionId;
            this.DestinationConnectionId = destinationConnectionId;
            this.ProfileId = profileId;
            this.ApplicationId = applicationId;
            this.Schedule = schedule;
            this.JobStatus = jobStatus;
            this.JobExecutionId = jobExecutionId;
            this.JobExecutionStatus = jobExecutionStatus;
            this.JobExecutionStartDateTime = jobExecutionStartDateTime;
            this.JobExecutionEndDateTime = jobExecutionEndDateTime;
            this.CreatedBy = createdBy;
            this.CreatedDateTime = createdDateTime;
            this.LastModifiedBy = lastModifiedBy;
            this.LastModifiedDateTime = lastModifiedDateTime;
        }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or Sets JobId
        /// </summary>
        [DataMember(Name = "jobId", EmitDefaultValue = true)]
        public string JobId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets JobTypeId
        /// </summary>
        [DataMember(Name = "jobTypeId", EmitDefaultValue = true)]
        public string JobTypeId { get; set; }

        /// <summary>
        /// Gets or Sets JobTypeName
        /// </summary>
        [DataMember(Name = "jobTypeName", EmitDefaultValue = true)]
        public string JobTypeName { get; set; }

        /// <summary>
        /// Gets or Sets SourceConnectionId
        /// </summary>
        [DataMember(Name = "sourceConnectionId", EmitDefaultValue = true)]
        public string SourceConnectionId { get; set; }

        /// <summary>
        /// Gets or Sets DestinationConnectionId
        /// </summary>
        [DataMember(Name = "destinationConnectionId", EmitDefaultValue = true)]
        public string DestinationConnectionId { get; set; }

        /// <summary>
        /// Gets or Sets ProfileId
        /// </summary>
        [DataMember(Name = "profileId", EmitDefaultValue = true)]
        public string ProfileId { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationId
        /// </summary>
        [DataMember(Name = "applicationId", EmitDefaultValue = true)]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Gets or Sets Schedule
        /// </summary>
        [DataMember(Name = "schedule", EmitDefaultValue = false)]
        public DataSyncApiJobV1Schedule Schedule { get; set; }

        /// <summary>
        /// Gets or Sets JobExecutionId
        /// </summary>
        [DataMember(Name = "jobExecutionId", EmitDefaultValue = true)]
        public string JobExecutionId { get; set; }

        /// <summary>
        /// Gets or Sets JobExecutionStartDateTime
        /// </summary>
        [DataMember(Name = "jobExecutionStartDateTime", EmitDefaultValue = true)]
        public string JobExecutionStartDateTime { get; set; }

        /// <summary>
        /// Gets or Sets JobExecutionEndDateTime
        /// </summary>
        [DataMember(Name = "jobExecutionEndDateTime", EmitDefaultValue = true)]
        public string JobExecutionEndDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Metrics
        /// </summary>
        [DataMember(Name = "metrics", EmitDefaultValue = true)]
        public List<DataSyncApiJobV1Metric> Metrics { get; private set; }

        /// <summary>
        /// Returns false as Metrics should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeMetrics()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ChildJobs
        /// </summary>
        [DataMember(Name = "childJobs", EmitDefaultValue = true)]
        public List<DataSyncApiJobV1ChildJob> ChildJobs { get; private set; }

        /// <summary>
        /// Returns false as ChildJobs should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeChildJobs()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTime
        /// </summary>
        [DataMember(Name = "createdDateTime", EmitDefaultValue = true)]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name = "lastModifiedBy", EmitDefaultValue = true)]
        public string LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedDateTime
        /// </summary>
        [DataMember(Name = "lastModifiedDateTime", EmitDefaultValue = true)]
        public string LastModifiedDateTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DataSyncApiJobV1JobListResponse {\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  JobId: ").Append(JobId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  JobTypeId: ").Append(JobTypeId).Append("\n");
            sb.Append("  JobTypeName: ").Append(JobTypeName).Append("\n");
            sb.Append("  SourceConnectionId: ").Append(SourceConnectionId).Append("\n");
            sb.Append("  DestinationConnectionId: ").Append(DestinationConnectionId).Append("\n");
            sb.Append("  ProfileId: ").Append(ProfileId).Append("\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("  Schedule: ").Append(Schedule).Append("\n");
            sb.Append("  JobStatus: ").Append(JobStatus).Append("\n");
            sb.Append("  JobExecutionId: ").Append(JobExecutionId).Append("\n");
            sb.Append("  JobExecutionStatus: ").Append(JobExecutionStatus).Append("\n");
            sb.Append("  JobExecutionStartDateTime: ").Append(JobExecutionStartDateTime).Append("\n");
            sb.Append("  JobExecutionEndDateTime: ").Append(JobExecutionEndDateTime).Append("\n");
            sb.Append("  Metrics: ").Append(Metrics).Append("\n");
            sb.Append("  ChildJobs: ").Append(ChildJobs).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedDateTime: ").Append(CreatedDateTime).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("  LastModifiedDateTime: ").Append(LastModifiedDateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DataSyncApiJobV1JobListResponse);
        }

        /// <summary>
        /// Returns true if DataSyncApiJobV1JobListResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of DataSyncApiJobV1JobListResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DataSyncApiJobV1JobListResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.JobId == input.JobId ||
                    (this.JobId != null &&
                    this.JobId.Equals(input.JobId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.JobTypeId == input.JobTypeId ||
                    (this.JobTypeId != null &&
                    this.JobTypeId.Equals(input.JobTypeId))
                ) && 
                (
                    this.JobTypeName == input.JobTypeName ||
                    (this.JobTypeName != null &&
                    this.JobTypeName.Equals(input.JobTypeName))
                ) && 
                (
                    this.SourceConnectionId == input.SourceConnectionId ||
                    (this.SourceConnectionId != null &&
                    this.SourceConnectionId.Equals(input.SourceConnectionId))
                ) && 
                (
                    this.DestinationConnectionId == input.DestinationConnectionId ||
                    (this.DestinationConnectionId != null &&
                    this.DestinationConnectionId.Equals(input.DestinationConnectionId))
                ) && 
                (
                    this.ProfileId == input.ProfileId ||
                    (this.ProfileId != null &&
                    this.ProfileId.Equals(input.ProfileId))
                ) && 
                (
                    this.ApplicationId == input.ApplicationId ||
                    (this.ApplicationId != null &&
                    this.ApplicationId.Equals(input.ApplicationId))
                ) && 
                (
                    this.Schedule == input.Schedule ||
                    (this.Schedule != null &&
                    this.Schedule.Equals(input.Schedule))
                ) && 
                (
                    this.JobStatus == input.JobStatus ||
                    this.JobStatus.Equals(input.JobStatus)
                ) && 
                (
                    this.JobExecutionId == input.JobExecutionId ||
                    (this.JobExecutionId != null &&
                    this.JobExecutionId.Equals(input.JobExecutionId))
                ) && 
                (
                    this.JobExecutionStatus == input.JobExecutionStatus ||
                    this.JobExecutionStatus.Equals(input.JobExecutionStatus)
                ) && 
                (
                    this.JobExecutionStartDateTime == input.JobExecutionStartDateTime ||
                    (this.JobExecutionStartDateTime != null &&
                    this.JobExecutionStartDateTime.Equals(input.JobExecutionStartDateTime))
                ) && 
                (
                    this.JobExecutionEndDateTime == input.JobExecutionEndDateTime ||
                    (this.JobExecutionEndDateTime != null &&
                    this.JobExecutionEndDateTime.Equals(input.JobExecutionEndDateTime))
                ) && 
                (
                    this.Metrics == input.Metrics ||
                    this.Metrics != null &&
                    input.Metrics != null &&
                    this.Metrics.SequenceEqual(input.Metrics)
                ) && 
                (
                    this.ChildJobs == input.ChildJobs ||
                    this.ChildJobs != null &&
                    input.ChildJobs != null &&
                    this.ChildJobs.SequenceEqual(input.ChildJobs)
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.CreatedDateTime == input.CreatedDateTime ||
                    (this.CreatedDateTime != null &&
                    this.CreatedDateTime.Equals(input.CreatedDateTime))
                ) && 
                (
                    this.LastModifiedBy == input.LastModifiedBy ||
                    (this.LastModifiedBy != null &&
                    this.LastModifiedBy.Equals(input.LastModifiedBy))
                ) && 
                (
                    this.LastModifiedDateTime == input.LastModifiedDateTime ||
                    (this.LastModifiedDateTime != null &&
                    this.LastModifiedDateTime.Equals(input.LastModifiedDateTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TenantId != null)
                {
                    hashCode = (hashCode * 59) + this.TenantId.GetHashCode();
                }
                if (this.JobId != null)
                {
                    hashCode = (hashCode * 59) + this.JobId.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.JobTypeId != null)
                {
                    hashCode = (hashCode * 59) + this.JobTypeId.GetHashCode();
                }
                if (this.JobTypeName != null)
                {
                    hashCode = (hashCode * 59) + this.JobTypeName.GetHashCode();
                }
                if (this.SourceConnectionId != null)
                {
                    hashCode = (hashCode * 59) + this.SourceConnectionId.GetHashCode();
                }
                if (this.DestinationConnectionId != null)
                {
                    hashCode = (hashCode * 59) + this.DestinationConnectionId.GetHashCode();
                }
                if (this.ProfileId != null)
                {
                    hashCode = (hashCode * 59) + this.ProfileId.GetHashCode();
                }
                if (this.ApplicationId != null)
                {
                    hashCode = (hashCode * 59) + this.ApplicationId.GetHashCode();
                }
                if (this.Schedule != null)
                {
                    hashCode = (hashCode * 59) + this.Schedule.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.JobStatus.GetHashCode();
                if (this.JobExecutionId != null)
                {
                    hashCode = (hashCode * 59) + this.JobExecutionId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.JobExecutionStatus.GetHashCode();
                if (this.JobExecutionStartDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.JobExecutionStartDateTime.GetHashCode();
                }
                if (this.JobExecutionEndDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.JobExecutionEndDateTime.GetHashCode();
                }
                if (this.Metrics != null)
                {
                    hashCode = (hashCode * 59) + this.Metrics.GetHashCode();
                }
                if (this.ChildJobs != null)
                {
                    hashCode = (hashCode * 59) + this.ChildJobs.GetHashCode();
                }
                if (this.CreatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedBy.GetHashCode();
                }
                if (this.CreatedDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedDateTime.GetHashCode();
                }
                if (this.LastModifiedBy != null)
                {
                    hashCode = (hashCode * 59) + this.LastModifiedBy.GetHashCode();
                }
                if (this.LastModifiedDateTime != null)
                {
                    hashCode = (hashCode * 59) + this.LastModifiedDateTime.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
